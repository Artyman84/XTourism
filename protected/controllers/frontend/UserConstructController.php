<?php/** * Created by PhpStorm. * User: Arty * Date: 29.08.2016 * Time: 23:34 */use \application\lib\WhoIs\WhoIs;class UserConstructController extends FrontendController{    /**     * @return array     */    public function filters() {        return array_merge(            parent::filters(),            [                'ACL + index',                'ajaxOnly + checkDomain, sendDomainRequest'            ]        );    }    /**     * Checks user's ACL for "LP Builder"     * @param $filterChain     */    public function filterACL($filterChain){        $package = ArShopUsersPackages::model()->findByAttributes(['user_id' => Yii::app()->user->id]);        if( $package && $package->isValid() ) {            $filterChain->run();        } else {            if (Yii::app()->request->isAjaxRequest) {                echo 'expired';            } else {                $this->decorator('alert', 'Нет купленного пакета!', ['class' => 'danger']);            }        }    }    /**     * Shows showcase of tours     */    public function actionIndex() {        $this->render('index', [            'tab' => Yii::app()->request->getParam('tab', 0),            'userDomain' => ArUserConstructDomains::model()->findByPk(Yii::app()->user->id)        ]);    }    /**     * Checks if domain name is available     */    public function actionCheckDomain(){        $domain_name = Yii::app()->request->getParam('domain_name', '');        if( WhoIs::checkDomainSyntax($domain_name) ) {            $domain = new WhoIs($domain_name);            try {                $ret = (int)!$domain->isAvailable();            } catch (Exception $exception) {                $ret = 4;            }        } else {            $ret = trim($domain_name) ? 2 : 3;        }        echo $ret;    }    /**     * Sends domain request     */    public function actionSendDomainRequest(){        $domain_name = Yii::app()->request->getParam('domain_name');        $user_id = Yii::app()->user->getId();        $attributes = [            'domain_name' => $domain_name,            'is_purchased' => 0,            'is_active' => 0,        ];        if( !($userDomain = ArUserConstructDomains::model()->findByPk($user_id)) ) {            $userDomain = new ArUserConstructDomains();            $userDomain->unsetAttributes();            $attributes['user_id'] = $user_id;        }        $userDomain->attributes = $attributes;        $ret = ['error' => 1];        if( $userDomain->save() ) {            TNotify::notifyAdminAboutDomainRequest(ArUsers::model()->findByPk($user_id), $domain_name);            $ret['content'] = '';            $ret['error'] = 0;        }        echo CJSON::encode($ret);    }}